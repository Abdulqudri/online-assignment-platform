<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Registration | OASP System</title>
    <!-- Font Awesome for Modern Icons (CDN) -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css">
    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;600&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/public/css/reg.css">
</head>

<body>
    <nav>
        <div class="menu-bar">
        <h1>
            <i class="fas fa-tasks"></i>
            AssignHub
            <i class="fas fa-check-circle"></i>
        </h1>
        <div class="menu-toggle" id="menu-toggle">
            <i class="fas fa-bars"></i>
        </div>
    </div>
    <ul id="menu">
        <li><a href="/welcome"><i class="fas fa-home"></i> Home</a></li>
        
        <li><a href="/auth/login"><i class="fas fa-sign-in-alt"></i> Login</a></li>
        <li><a href="/about"><i class="fas fa-info-circle"></i> About</a></li>
    </ul>
</nav>

    <div class="registration-container">
        <h2><i class="fas fa-user-circle" style="font-size: 3em; display: block; text-align: center;"></i></h2>
        <h2>User Registration</h2>

        <form id="registrationForm" method="POST" action="/auth/register">
            <label for="userType">Register as:</label>
            <select id="userType" name="role" required>
                <option value="">--Select--</option>
                <option value="student">Student</option>
                <option value="lecturer">Lecturer</option>
            </select>
            <div id="roleError" class="error-message"></div>

            <label for="name">
                <i class="fas fa-user"></i> Full Name:
            </label>
            <input type="text" id="name" name="name" placeholder="Enter your full name" pattern="^[a-zA-Z\s]+$"
                title="Only alphabets and spaces are allowed" required>
            <div id="nameError" class="error-message"></div>

            <label for="email">
                <i class="fas fa-envelope"></i> Email Address:
            </label>
            <input type="email" id="email" name="email" placeholder="Enter your email" required>
            <div id="emailError" class="error-message"></div>

            <label for="password">
                <i class="fas fa-lock"></i> Password:
            </label>
            <div class="password-container">
                <input type="password" id="password" name="password" placeholder="Enter your password"
                    pattern="^(?=.*\d)(?=.*[a-z])(?=.*[A-Z]).{8,}$"
                    title="Minimum 8 characters, at least one uppercase letter, one lowercase letter, and one number"
                    required>
                <i class="fas fa-eye-slash password-toggle" onclick="togglePasswordVisibility()"></i>
            </div>
            <div id="passwordError" class="error-message"></div>

            <div class="user-fields lecturer" style="display: none;">
                <label for="lecturerId">
                    <i class="fas fa-id-card"></i> Lecturer ID:
                </label>
                <input type="text" id="lecturerId" name="lecturerIdNo" placeholder="Enter your lecturer ID"
                    >
            </div>
            <div class="user-fields student" style="display: none;">
                <label for="admission-no">
                    <i class="fas fa-id-card"></i> Admission No:
                </label>
                <input type="text" id="admission-no" name="studentId"
                    placeholder="Enter your student ID (e.g 1910310067)" pattern="^[a-zA-Z0-9]{10}$"
                    title="10 alphanumeric characters" >
            </div>
            <div id="lecturerIdError" class="error-message"></div>


            <button class="submit" type="submit">Register</button>
            <div id="generalError" class="error-message"></div>
        </form>
    </div>

    <footer>
        <p>&copy; 2024 Online Assignment Submission Platform.</p>
    </footer>

    <script>
         const toggle = document.getElementById('menu-toggle');
        const menu = document.getElementById('menu');

        toggle.addEventListener('click', () => {
            menu.classList.toggle('active');
        });
        // Toggle Password Visibility
    function togglePasswordVisibility() {
    const passwordInput = document.getElementById("password");
    const toggleIcon = document.querySelector(".password-toggle");
    if (passwordInput.type === "password") {
        passwordInput.type = "text";
        toggleIcon.classList.replace("fa-eye-slash", "fa-eye");
    } else {
        passwordInput.type = "password";
        toggleIcon.classList.replace("fa-eye", "fa-eye-slash");
    }
}

        // Backend Error Handling with JSON Payload
        document.getElementById('registrationForm').addEventListener('submit', async function (e) {
            e.preventDefault();

            // Clear previous error messages
            document.querySelectorAll('.error-message').forEach(el => el.textContent = '');

            // Get form data as JSON
            const formData = new FormData(this);
            const data = {};
            formData.forEach((value, key) => {
                data[key] = value;
            });

            try {
                const response = await fetch(this.action, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'Accept': 'application/json'
                    },
                    body: JSON.stringify(data) // Send JSON instead of FormData
                });
                const result = await response.json();
                if (!response.ok) {
                    const errorData = result.errors || { message: result.message || 'An error occurred.' };
                    for (const [key, value] of Object.entries(errorData)) {
                        const errorElement = document.getElementById(`${key}Error`);
                        errorElement.style.display = "block"
                        if (errorElement) errorElement.textContent = value;
                    }
                } else {
                    // Redirect or show success message
                    window.location.href = result.redirectUrl || '/auth/login';
                }
            } catch (err) {
                document.getElementById('generalError').textContent = 'Unable to process the request. Please try again.';
            }
        });

        // Show relevant fields based on user type
        document.getElementById('userType').addEventListener('change', function () {
            const userType = this.value;
            document.querySelectorAll('.user-fields').forEach(field => field.style.display = 'none');
            if (userType === 'student') {
                document.querySelector('.student').style.display = 'block';
            } else if (userType === 'lecturer') {
                document.querySelector('.lecturer').style.display = 'block';
            }
        });
    </script>
</body>

</html>
